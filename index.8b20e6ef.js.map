{"mappings":"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","sources":["src/js/calendar.js"],"sourcesContent":["const daysTag = document.querySelector('.days'),\n  currentDate = document.querySelector('.current-date'),\n  prevNextIcon = document.querySelectorAll('.calendar-icons span');\n\n// getting new date, current year and month\nlet date = new Date(),\n  currDay = date.getDate(),\n  currMonth = date.getMonth(),\n  currYear = date.getFullYear();\n\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector('.input-form'),\n    closeModalBtn: document.querySelector('body'),\n    modal: document.querySelector('.calendar-wrapper'),\n    input: document.querySelector('.calendar-input'),\n    arrow: document.querySelector('.calendar__button-arrow'),\n    calendarBtn: document.querySelector('.calendar__button-calendar'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  document.addEventListener('click', hideModals);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden-wrapper');\n    refs.input.classList.toggle('isActive');\n    refs.arrow.classList.toggle('switched');\n    refs.calendarBtn.classList.toggle('switchedColor');\n  }\n\n  function hideModals(evt) {\n    let dataValue = document.getElementById('input-picker').value;\n    if (evt.target.closest('.calendar-form')) {\n      return;\n    }\n    if (refs.input.classList.contains('isActive')) {\n      refs.modal.classList.add('is-hidden-wrapper');\n      refs.input.classList.remove('isActive');\n      refs.arrow.classList.remove('switched');\n      refs.calendarBtn.classList.remove('switchedColor');\n      document.getElementById('input-picker').value = '';\n      localStorage.removeItem('VALUE');\n      localStorage.removeItem('date');\n    }\n  }\n})();\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nconst renderCalendar = number => {\n  let firstDayofMonth = new Date(currYear, currMonth, 1).getDay(), // getting first day of month\n    lastDateofMonth = new Date(currYear, currMonth + 1, 0).getDate(), // getting last date of month\n    lastDayofMonth = new Date(currYear, currMonth, lastDateofMonth).getDay(), // getting last day of month\n    lastDateofLastMonth = new Date(currYear, currMonth, 0).getDate(); // getting last date of previous month\n  let liTag = '';\n  for (let i = firstDayofMonth; i > 0; i--) {\n    liTag += `<li class=\"inactive\">${lastDateofLastMonth - i + 1}</li>`;\n  }\n\n  for (let i = 1; i <= lastDateofMonth; i++) {\n    let isToday =\n      i === date.getDate() &&\n      currMonth === new Date().getMonth() &&\n      currYear === new Date().getFullYear();\n    liTag += `<li class=\"${isToday}\">${i}</li>`;\n  }\n  for (let i = lastDayofMonth; i < 6; i++) {\n    liTag += `<li class=\"inactive\">${i - lastDayofMonth + 1}</li>`;\n  }\n  currentDate.innerText = `${months[currMonth]} ${currYear}`; \n  daysTag.innerHTML = liTag;\n  const dayChange = document.querySelector('.days');\n\n  dayChange.addEventListener('click', evt => {\n    [...evt.currentTarget.children].forEach(item => {\n      item.classList.remove('active');\n    });\n\n    evt.target.classList.add('active');\n    let newValueDay = evt.target.textContent;\n    if (evt.target.textContent.length > 10) {\n      return;\n    }\n    let month = (currMonth + 1).toString();\n    document.getElementById('input-picker').value =\n    newValueDay.padStart(2, '0')+\n      '/' +\n      month.padStart(2, '0') +\n      '/' +\n      currYear ;\n\n    localStorage.setItem('VALUE', JSON.stringify(newValueDay));\n\n    let inputDateValue = document.querySelector('.calendar-input').value;\n    localStorage.setItem('date', JSON.stringify(inputDateValue));\n    document.querySelector('[data-modal]').classList.add('is-hidden-wrapper');\n    document.querySelector('.calendar-input').classList.remove('isActive');\n    document\n      .querySelector('.calendar__button-arrow')\n      .classList.remove('switched');\n    document\n      .querySelector('.calendar__button-calendar')\n      .classList.remove('switchedColor');\n  });\n  //}\n};\n\nrenderCalendar();\nlet findUl = document.querySelector('.days');\n\nprevNextIcon.forEach(icon => {\n  icon.addEventListener('click', () => {\n    currMonth = icon.id === 'prev' ? currMonth - 1 : currMonth + 1;\n    if (currMonth < 0 || currMonth > 11) {\n      date = new Date(currYear, currMonth, new Date().getDate());\n      currYear = date.getFullYear(); \n      currMonth = date.getMonth(); \n    } else {\n      date = new Date(); \n    }\n    renderCalendar(); \n    let test = JSON.parse(localStorage.getItem('VALUE'));\n    let reachUl = daysTag.childNodes;\n    reachUl.forEach(elem => {\n      if (elem.textContent === test) {\n        elem.classList.add('active');\n      }\n    });\n  });\n});\n\nlocalStorage.removeItem('VALUE');\nlocalStorage.removeItem('date');"],"names":["_arrayLikeToArray","arr","len","daysTag","document","querySelector","currentDate","prevNextIcon","querySelectorAll","date","Date","currDay","getDate","currMonth","getMonth","currYear","getFullYear","refs","openModalBtn","closeModalBtn","modal","input","arrow","calendarBtn","addEventListener","classList","toggle","evt","getElementById","value","target","closest","contains","add","remove","localStorage","removeItem","months","renderCalendar","number","firstDayofMonth","getDay","lastDateofMonth","lastDayofMonth","lastDateofLastMonth","liTag","i","concat","i1","isToday","i2","innerText","innerHTML","_toConsumableArray","currentTarget","children","forEach","item","newValueDay","textContent","length","month","toString","padStart","setItem","JSON","stringify","inputDateValue","findUl","icon","id","test","parse","getItem","childNodes","elem"],"version":3,"file":"index.8b20e6ef.js.map"}